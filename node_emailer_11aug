
Nodemailer
Nodemailer is a module for Node.js applications to allow easy as cake email sending. The project got started back in 2010 when there was no sane option to send email messages, today it is the solution most Node.js users turn to by default.
Nodemailer is licensed under MIT license. See license details in the License page. If you are upgrading from Nodemailer v2 or older, then see the light migration guide here.
npm install nodemailer --save
Support Nodemailer
You can support Nodemailer by becoming either an OpenCollective sponsor, a patreon or by making a donation via PayPal, see License page for details.
Nodemailer features
â€¢	A single module with zero dependencies â€“ code is easily auditable, as there are no dark corners
â€¢	Heavy focus on security, no-one likes RCE vulnerabilities
â€¢	Unicode support to use any characters, including emoji ðŸ’ª
â€¢	Windows support â€“ you can install it with npm on Windows just like any other module, there are no compiled dependencies. Use it hassle free from Azure or from your Windows box
â€¢	Use HTML content, as well as plain text alternative
â€¢	Add Attachments to messages
â€¢	Embedded image attachments for HTML content â€“ your design does not get blocked
â€¢	Secure email delivery using TLS/STARTTLS
â€¢	Different transport methods in addition to the built-in SMTP support
â€¢	Sign messages with DKIM
â€¢	Custom Plugin support for manipulating messages
â€¢	Sane OAuth2 authentication
â€¢	Proxies for SMTP connections
â€¢	ES6 code â€“ no more unintentional memory leaks, due to hoisted varâ€™s
â€¢	Autogenerated email test accounts from Ethereal.email


var mailer = require("nodemailer");

// Use Smtp Protocol to send Email
var smtpTransport = mailer.createTransport("SMTP",{
    service: "Gmail",
    auth: {
        user: "gmail_id@gmail.com",
        pass: "gmail_password"
    }
});

var mail = {
    from: "Yashwant Chavan <from@gmail.com>",
    to: "to@gmail.com",
    subject: "Send Email Using Node.js",
    text: "Node.js New world for me",
    html: "<b>Node.js New world for me</b>"
}

smtpTransport.sendMail(mail, function(error, response){
    if(error){
        console.log(error);
    }else{
        console.log("Message sent: " + response.message);
    }

    smtpTransport.close();
});

Example
This is a complete example to send an email with plain text and HTML body
'use strict';
const nodemailer = require('nodemailer');

// Generate test SMTP service account from ethereal.email
// Only needed if you don't have a real mail account for testing
nodemailer.createTestAccount((err, account) => {
    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: account.user, // generated ethereal user
            pass: account.pass // generated ethereal password
        }
    });

    // setup email data with unicode symbols
    let mailOptions = {
        from: '"Fred Foo ðŸ‘»" <foo@example.com>', // sender address
        to: 'bar@example.com, baz@example.com', // list of receivers
        subject: 'Hello âœ”', // Subject line
        text: 'Hello world?', // plain text body
        html: '<b>Hello world?</b>' // html body
    };

    // send mail with defined transport object
    transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
            return console.log(error);
        }
        console.log('Message sent: %s', info.messageId);
        // Preview only available when sending through an Ethereal account
        console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));

        // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>
        // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
    });
});

